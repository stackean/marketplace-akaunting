type: install
name: Akaunting
engine: php

globals:
  DB_NAME: akaunting
  DB_USER: akaunting_user
  DB_PASS: ${fn.password(12)}
  AKAUNTING_USER: ${user.email}
  AKAUNTING_PASS: ${fn.password(12)}

nodes:
  - nodeType: mariadb-dockerized
    nodeGroup: sqldb
    displayName: db-node-${fn.random}
    diskLimit: 5
    cloudlets: 1
    flexibleCloudlets: 4
  - nodeType: apache
    nodeGroup: cp
    displayName: app-node-${fn.random}
    diskLimit: 5
    cloudlets: 1
    flexibleCloudlets: 4
    tag: 2.4.46-php-7.4.13
    env:
      DB_MYSQL_HOST: ${nodes.sqldb.address}
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: ${globals.DB_USER}
      DB_MYSQL_PASSWORD: ${globals.DB_PASS}
      DB_MYSQL_NAME: ${globals.DB_NAME}
      ADMIN_USER: ${globals.AKAUNTING_USER}
      ADMIN_PASS: ${globals.AKAUNTING_PASS}
onInstall:
  - prepareSqlDatabase:
      nodeGroup: sqldb
      loginCredentials:
        user: root
        password: ${nodes.sqldb.password}
      newDatabaseName: ${globals.DB_NAME}
      newDatabaseUser:
        name: ${globals.DB_USER}
        password: ${globals.DB_PASS}
  - deploy [cp]:
      archive: https://github.com/akaunting/akaunting/releases/download/2.1.0/Akaunting_2.1.0-Stable.zip
      name: akaunting
      context: ROOT
  - cmd [cp]:
    - cd ${SERVER_WEBROOT}
    - composer install
    - php artisan install --db-host=${nodes.sqldb.address} --db-name=${globals.DB_NAME} --db-username=${globals.DB_USER} --db-password=${globals.DB_PASS} --admin-email=${globals.AKAUNTING_USER} --admin-password=${globals.AKAUNTING_PASS}
    - php artisan sample-data:seed
  - return:
      result: success
      email: success
      
success: |
  Your Akaunting app is successfully installed.
  **URL**: http://node${nodes.cp.id}-${env.domain}:${globals.publicPort}
  **User**: ${globals.AKAUNTING_USER}
  **Pass**: ${globals.AKAUNTING_PASS}
